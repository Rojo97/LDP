S -> Tipo id ( Args ) { A }

Tipo -> TipoSimple
        | TipoComp
        | void

TipoSimple ->   int 
            | boolean
            | byte
            | float
            | char
            | double
            | long
            | short

TipoComp -> signed TipoSimple
         | unsigned TipoSimple

Args -> Arg 
        | Arg Args

A -> Exp A
    | Flujo A
    | Îµ

Arg -> Tipo id
        | Tipo id ,
        | id ,
        | id
        | Îµ

Exp -> Asig ;
        | Func ;
        | Return ;
        | break ;

Asig -> Tipo id = Func ;
        | Tipo Ids ;

Func -> ID ( Args ) ;
        | Op

Op ->  ( Op )
     | Op + Op
     | Op - Op
     | Op * Op
     | Op / Op
     | Op % Op
     | id
     | num

Flujo -> If
        | If Else 
        | While
        | do { A } while ( C ) ;
        | For
        | Switch

If -> if ( C ) { A }
    | if ( C ) Exp

Else -> else { A }
        | else Exp

While -> while ( C ) { A }
        | while ( C ) Exp

For -> for ( Asig ; C ; Func ) { A }
        | for ( Asig ; C ; Func ) Exp

Switch -> switch ( Func ) { Cases default : A }
        | switch ( Func ) { Cases }

Return -> | return ( Func )
          | return Id

C -> ( C )
    | C Comp C
    | id
    | num
    | Boolean

Comp -> = =
        | ! =
        | >
        | <
        | > =
        | < =
        | < >
        | & &
        | | |

Boolean -> True
            | False

Ids -> id
    | id , Ids
    | Îµ 

Cases -> case id: A Cases


